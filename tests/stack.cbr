Stack :: struct {
    values: List<string> = List<string>()
    count: int = 0
}

push :: (s: Stack, n: string) -> () {
    s.values[s.count] = n
    s.count = s.count + 1
}

pop :: (s: Stack) -> (string) {
    ret: string = s.values[s.count - 1]
    s.count = s.count - 1
    -> ret
}

stack := Stack()

push(stack, "one")
push(stack, "two")
push(stack, "three")

while stack.count > 0 {
    print(pop(stack) + "\n")
}
